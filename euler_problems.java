package com.company;

public class Main {

    public static void main(String[] args) {
	// write your code here
        System.out.println("Starting with Problem 1");
        NN_B1000(10); //Sanity check
        NN_B1000(1000); //Q1

        System.out.println("Moving on to Problem 2");
        int n = 100; // this is more than enough to get 4M, Fibonacci values over 4M start around 34
        //Lookup, sanity check of Fibonacci values: http://www.maths.surrey.ac.uk/hosted-sites/R.Knott/Fibonacci/fibtable.html
        System.out.println("\tAdding EVEN Fibonacci sequence values below 4M");
        System.out.println("\tResult (sum of EVEN Fibonacci values below 4M): " + FIB_B_4M(n)); //Q2
    }


    public static void NN_B1000(int n) {
        //If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9.
        //The sum of these multiples is 23.
        // Find the sum of all the multiples of 3 or 5 below 1000.
        System.out.println("\tAdding multiples of 3 or 5 below: " + n);
        int sum = 0;

        for (int i = 0; i < n; i++){
            if ((i % 3) == 0 || (i % 5) == 0) { // is i divisible by 3 or 5
                sum += i;
            }
        }
        System.out.println("\tResult: " + sum + "\n");

    }

    public static int FIB_B_4M(int n) {
        /*
        Each new term in the Fibonacci sequence is generated by adding the previous two terms
        By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89,...
        By considering the terms in the Fibonacci sequence whose values do not exceed four million,
        find the sum of the even-valued terms.
        */

        //Where we will stores Fibonacci values
        int[] FIBBY;
        FIBBY = new int[n+2]; //https://www.geeksforgeeks.org/arrays-in-java/

        //Initialize Fibonacci
        FIBBY[0] = 0;
        FIBBY[1] = 1;

        int i = 2; //used for While loop
        int sum = 0; // the running sum

        while (i < n) { //Calculate Fibonacci values up to n
            //Calculate Fibonacci value
            FIBBY[i] = FIBBY[i-1] + FIBBY[i-2];

            if (FIBBY[i] >= 4000000) { //exit, when Fibonacci value over 4M
                break;
            }

            // is the value even?
            // if so, add it to the sum
            if (FIBBY[i] % 2 == 0) { // It is even
                //System.out.println("Adding: " + FIBBY[i] + " to " + sum);
                sum += FIBBY[i]; // Add it to the running sum
            }

            i += 1;
        }

        //Return the sum of EVEN Fibonacci values below 4M
        return sum;
    }
}
